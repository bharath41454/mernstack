{"version":3,"sources":["shared/components/UIElements/Avatar.js","users/components/UserItem.js","users/components/UsersList.js","users/pages/Users.js"],"names":["Avatar","props","className","style","src","image","alt","width","height","UserItem","Fragment","Card","to","id","name","placeCount","UserList","items","length","map","user","places","Users","useState","loadedUsers","setLoadedUsers","useHttpClient","isLoading","error","sendRequest","clearError","useEffect","a","process","BACKEND_URL","responseData","users","console","fetchUsers","ErrorModal","onClear","LoadingSpinner"],"mappings":"oQAgBeA,EAZA,SAACC,GACd,OACE,qBAAKC,UAAS,iBAAYD,EAAMC,WAAaC,MAAOF,EAAME,MAA1D,SACE,qBACEC,IAAKH,EAAMI,MACXC,IAAKL,EAAMK,IACXH,MAAO,CAAEI,MAAON,EAAMM,MAAOC,OAAQP,EAAMM,Y,QCqBpCE,EAzBE,SAACR,GAChB,OACE,cAAC,IAAMS,SAAP,UACE,oBAAIR,UAAU,YAAd,SACE,cAACS,EAAA,EAAD,CAAMT,UAAU,qBAAhB,SACE,eAAC,IAAD,CAAMU,GAAE,WAAMX,EAAMY,GAAZ,WAAR,UACE,qBAAKX,UAAU,mBAAf,SACE,cAAC,EAAD,CACEG,MAAK,gCAA2BJ,EAAMI,OACtCC,IAAKL,EAAMK,QAGf,sBAAKJ,UAAU,kBAAf,UACE,6BAAKD,EAAMa,OACX,+BACGb,EAAMc,WADT,IAC2C,IAArBd,EAAMc,WAAmB,QAAU,yBCSxDC,G,MAzBE,SAACf,GAChB,OAA2B,IAAvBA,EAAMgB,MAAMC,OAEZ,cAAC,IAAMR,SAAP,UACE,cAACC,EAAA,EAAD,UACE,8CAMN,oBAAIT,UAAU,aAAd,SACGD,EAAMgB,MAAME,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CAEEP,GAAIO,EAAKP,GACTR,MAAOe,EAAKf,MACZS,KAAMM,EAAKN,KACXC,WAAYK,EAAKC,OAAOH,QAJnBE,EAAKP,W,wBCkBLS,UA/BD,WACZ,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAsDC,cAA9CC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,YAAaC,EAAvC,EAAuCA,WAgBvC,OAdAC,qBAAU,YACQ,uCAAG,4BAAAC,EAAA,+EAEYH,EAAY,GAAD,OACjCI,mIAAYC,YADqB,UAFvB,OAETC,EAFS,OAKfV,EAAeU,EAAaC,OALb,gDAOfC,QAAQT,MAAR,MAPe,yDAAH,qDAUhBU,KACC,CAACT,IAGF,eAAC,IAAMnB,SAAP,WACE,cAAC6B,EAAA,EAAD,CAAYX,MAAOA,EAAOY,QAASV,IAClCH,GACC,qBAAKzB,UAAU,SAAf,SACE,cAACuC,EAAA,EAAD,OAGFd,GAAaH,GAAe,cAAC,EAAD,CAAUP,MAAOO","file":"static/js/3.b80299b6.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./Avatar.css\";\n\nconst Avatar = (props) => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from \"react\";\r\nimport \"./UserItem.css\";\r\nimport Avatar from \"../../shared/components/UIElements/Avatar\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst UserItem = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <li className='user-item'>\r\n        <Card className='user-item__content'>\r\n          <Link to={`/${props.id}/places`}>\r\n            <div className='user-item__image'>\r\n              <Avatar\r\n                image={`http://localhost:5000/${props.image}`}\r\n                alt={props.alt}\r\n              />\r\n            </div>\r\n            <div className='user-item__info'>\r\n              <h2>{props.name}</h2>\r\n              <h3>\r\n                {props.placeCount} {props.placeCount === 1 ? \"Place\" : \"Places\"}\r\n              </h3>\r\n            </div>\r\n          </Link>\r\n        </Card>\r\n      </li>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UserItem;\r\n","import React from \"react\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport UserItem from \"./UserItem\";\r\nimport \"./UserList.css\";\r\n\r\nconst UserList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <h2>No Users</h2>\r\n        </Card>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  return (\r\n    <ul className='users-list'>\r\n      {props.items.map((user) => (\r\n        <UserItem\r\n          key={user.id}\r\n          id={user.id}\r\n          image={user.image}\r\n          name={user.name}\r\n          placeCount={user.places.length}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport UserList from \"../components/UsersList\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nconst Users = () => {\r\n  const [loadedUsers, setLoadedUsers] = useState([]);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.BACKEND_URL}users`\r\n        );\r\n        setLoadedUsers(responseData.users);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n    fetchUsers();\r\n  }, [sendRequest]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className='center'>\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedUsers && <UserList items={loadedUsers} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n"],"sourceRoot":""}