{"version":3,"sources":["shared/components/FormElements/Button.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/components/UIElements/Card.js","shared/hooks/http-hook.js","shared/components/UIElements/Modal.js","shared/components/UIElements/ErrorModal.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/context/auth-context.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","shared/util/validators.js","shared/components/FormElements/Input.js","shared/components/FormElements/ImageUpload.js","shared/hooks/form-hook.js","users/pages/Auth.js","App.js","reportWebVitals.js","index.js"],"names":["Button","props","href","className","size","inverse","danger","children","to","exact","type","onClick","disabled","LoadingSpinner","asOverlay","Backdrop","ReactDOM","createPortal","document","getElementById","Card","style","useHttpClient","useState","isLoading","setIsLoading","error","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortController","AbortController","current","push","fetch","signal","response","json","responseData","filter","requestCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","ModalOverlay","content","header","onSubmit","event","preventDefault","contentClass","footerClass","footer","ReactDom","Modal","Fragment","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","ErrorModal","onClear","logoutTimer","MainHeader","AuthContext","createContext","isLoggedIn","userId","token","login","logout","NavLinks","auth","useContext","SideDrawer","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","validate","value","validators","isValid","validator","trim","length","val","test","inputReducer","state","action","isTouched","Input","initialState","initialValue","initialValid","useReducer","inputState","dispatch","id","onInput","changeHandler","target","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","ImageUpload","filePickerRef","file","setFile","previewUrl","setPreviewUrl","setIsValid","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","center","src","alt","click","formReducer","formIsValid","inputId","inputs","Auth","isLoginMode","setIsLoginMode","initialInputs","initialFormValidity","formState","inputData","formValidity","useForm","email","password","InputHandler","setFormData","authSubmitHandler","process","BACKEND_URL","JSON","stringify","console","formData","FormData","append","name","image","undefined","prevMode","Users","React","lazy","NewPlace","UserPlaces","UpdatePlace","App","routes","setToken","setUserId","tokenExpirationDate","setTokenExpirationDate","uid","expirationDate","Date","getTime","localStorage","setItem","expiration","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","component","Provider","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.ccce393f.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  // useCallback to avoid infinite loops;\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n\r\n      // what if the request is still pending and we route to other page ,\r\n      // in this scenario you'll try to update a component which is not in dom;\r\n      // So use abort controller to cancel on going http request\r\n      const httpAbortController = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortController);\r\n\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortController.signal, // pass signal to add our config\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        // Remove abort controller when the response is returned\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          (requestCtrl) => requestCtrl !== httpAbortController\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (error) {\r\n        setError(error.message);\r\n        setIsLoading(false);\r\n        throw error;\r\n      }\r\n    },\r\n    []\r\n  );\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // when the request are on the way on u leave the component , then u have to cancle the requests\r\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\r\n    }; // clean up function\r\n  }, []);\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport Backdrop from \"./Backdrop\";\r\nimport \"./Modal.css\";\r\n\r\nconst ModalOverlay = (props) => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.className}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\r\n        }\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n      </form>\r\n      <footer className={`modal__footer ${props.footerClass}`}>\r\n        {props.footer}\r\n      </footer>\r\n    </div>\r\n  );\r\n  return ReactDom.createPortal(content, document.getElementById(\"modal-hook\"));\r\n};\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames='modal'\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\n\nimport Modal from \"./Modal\";\nimport Button from \"../FormElements/Button\";\n\nconst ErrorModal = (props) => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header='An Error Occurred!'\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React, { useCallback, useEffect, useState } from \"react\";\r\n\r\nlet logoutTimer;\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(null);\r\n  const [userId, setUserId] = useState(false);\r\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n\r\n  const login = useCallback((uid, token, expirationDate) => {\r\n    setToken(token);\r\n    setUserId(uid);\r\n    const tokenExpirationDate =\r\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n    // expirationDate || new Date(new Date().getTime() + 2000);\r\n    setTokenExpirationDate(tokenExpirationDate);\r\n    localStorage.setItem(\r\n      \"userData\",\r\n      JSON.stringify({\r\n        userId: uid,\r\n        token: token,\r\n        expiration: tokenExpirationDate.toISOString(),\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    localStorage.removeItem(\"userData\");\r\n    setUserId(null);\r\n    setTokenExpirationDate(null);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token && tokenExpirationDate) {\r\n      const remainingTime =\r\n        tokenExpirationDate.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainingTime);\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [token, logout, tokenExpirationDate]);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    if (\r\n      storedData &&\r\n      storedData.token &&\r\n      new Date(storedData.expiration) > new Date()\r\n    ) {\r\n      login(\r\n        storedData.userId,\r\n        storedData.token,\r\n        new Date(storedData.expiration)\r\n      );\r\n    }\r\n  }, [login]);\r\n\r\n  return { token, userId, login, logout };\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./MainHeader.css\";\r\n\r\nconst MainHeader = (props) => {\r\n  return <header className='main-header'>{props.children}</header>;\r\n};\r\n\r\nexport default MainHeader;\r\n","import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  userId: null,\r\n  token: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n","import React, { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\nimport Button from \"../FormElements/Button\";\r\n\r\nimport \"./NavLinks.css\";\r\n\r\nconst NavLinks = (props) => {\r\n  const auth = useContext(AuthContext);\r\n  return (\r\n    <ul className='nav-links'>\r\n      <li>\r\n        <NavLink to='/' exact>\r\n          All Users\r\n        </NavLink>\r\n      </li>\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to={`/${auth.userId}/places`}>My Places</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to='/places/new'>Add Places</NavLink>\r\n        </li>\r\n      )}\r\n      {!auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to='/auth'>Autheticate</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <button onClick={auth.logout}>Logout</button>\r\n        </li>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavLinks;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport \"./SideDrawer.css\";\r\n\r\nconst SideDrawer = (props) => {\r\n  const content = (\r\n    <CSSTransition\r\n      in={props.show}\r\n      timeout={200}\r\n      classNames='slide-in-left'\r\n      mountOnEnter\r\n      unmountOnExit\r\n    >\r\n      <aside className='side-drawer' onClick={props.onClick}>\r\n        {props.children}\r\n      </aside>\r\n    </CSSTransition>\r\n  );\r\n\r\n  return ReactDOM.createPortal(content, document.getElementById(\"drawer-hook\"));\r\n};\r\n\r\nexport default SideDrawer;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport MainHeader from \"./MainHeader\";\r\nimport NavLinks from \"./NavLinks\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport Backdrop from \"../UIElements/Backdrop\";\r\nimport \"./MainNavigation.css\";\r\n\r\nconst MainNavigation = (props) => {\r\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n\r\n  const openDrawerHandler = () => {\r\n    setDrawerIsOpen(true);\r\n  };\r\n\r\n  const closeDrawerHandler = () => {\r\n    setDrawerIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\r\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n        <nav className='main-navigation__drawer-nav'>\r\n          <NavLinks />\r\n        </nav>\r\n      </SideDrawer>\r\n\r\n      <MainHeader>\r\n        <button\r\n          className='main-navigation__menu-btn'\r\n          onClick={openDrawerHandler}\r\n        >\r\n          <span />\r\n          <span />\r\n          <span />\r\n        </button>\r\n        <h1 className='main-navigation__title'>\r\n          <Link to='/'>Your places</Link>\r\n        </h1>\r\n        <nav className='main-navigation__header-nav'>\r\n          <NavLinks />\r\n        </nav>\r\n      </MainHeader>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\r\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\r\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\r\nconst VALIDATOR_TYPE_MIN = \"MIN\";\r\nconst VALIDATOR_TYPE_MAX = \"MAX\";\r\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\r\nconst VALIDATOR_TYPE_FILE = \"FILE\";\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MAXLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n","import { useEffect, useReducer } from \"react\";\r\nimport { validate } from \"../../util/validators\";\r\nimport \"./Input.css\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCH\":\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  const initialState = {\r\n    value: props.initialValue || \"\",\r\n    isTouched: false,\r\n    isValid: props.initialValid || false,\r\n  };\r\n\r\n  const [inputState, dispatch] = useReducer(inputReducer, initialState);\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: \"TOUCH\",\r\n    });\r\n  };\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport Button from \"../FormElements/Button\";\r\nimport \"./ImageUpload.css\";\r\n\r\nconst ImageUpload = (props) => {\r\n  const filePickerRef = useRef();\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = ({ target }) => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (target.files && target.files.length === 1) {\r\n      pickedFile = target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div className='form-control'>\r\n        <input\r\n          type='file'\r\n          ref={filePickerRef}\r\n          id={props.id}\r\n          style={{ display: \"none\" }}\r\n          className=' '\r\n          accept='.jpg,.png,.jpeg'\r\n          onChange={pickedHandler}\r\n        />\r\n        <div className={`image-upload ${props.center && \"center\"}`}>\r\n          <div className='image-upload__preview'>\r\n            {previewUrl && <img src={previewUrl} alt='Preview' />}\r\n            {!previewUrl && <p>Please pick an image.</p>}\r\n          </div>\r\n          <Button type='button' onClick={pickImageHandler}>\r\n            Pick Image\r\n          </Button>\r\n        </div>\r\n        {!isValid && <p>{props.errorText}</p>}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n    case \"SET_DATA\":\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.isValid,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const initialState = {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity,\r\n  };\r\n\r\n  const [formState, dispatch] = useReducer(formReducer, initialState);\r\n\r\n  const InputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id,\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity,\r\n    });\r\n  }, []);\r\n\r\n  return [formState, InputHandler, setFormData];\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\n\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/util/validators\";\r\nimport \"./Auth.css\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nconst Auth = () => {\r\n  const auth = useContext(AuthContext);\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const initialState = {\r\n    email: {\r\n      value: \"\",\r\n      isValid: false,\r\n    },\r\n    password: {\r\n      value: \"\",\r\n      isValid: false,\r\n    },\r\n  };\r\n\r\n  const [formState, InputHandler, setFormData] = useForm(initialState, false);\r\n\r\n  const switchModeHandler = () => {\r\n    if (!isLoginMode) {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: undefined,\r\n          image: undefined,\r\n        },\r\n        formState.inputs.email.isValid && formState.inputs.password.isValid\r\n      );\r\n    } else {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: {\r\n            value: \"\",\r\n            isValid: false,\r\n          },\r\n          image: {\r\n            value: null,\r\n            isValid: false,\r\n          },\r\n        },\r\n        false\r\n      );\r\n    }\r\n    setIsLoginMode((prevMode) => !prevMode);\r\n  };\r\n\r\n  const authSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    if (isLoginMode) {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.BACKEND_URL}users/login`,\r\n          \"POST\",\r\n          JSON.stringify({\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value,\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        );\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    } else {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append(\"email\", formState.inputs.email.value);\r\n        formData.append(\"name\", formState.inputs.name.value);\r\n        formData.append(\"password\", formState.inputs.password.value);\r\n        formData.append(\"image\", formState.inputs.image.value);\r\n        const responseData = await sendRequest(\r\n          `${process.env.BACKEND_URL}users/signup`,\r\n          \"POST\",\r\n          formData\r\n        );\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Card className='authentication'>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <h2>Login Required</h2>\r\n        <hr />\r\n        <form onSubmit={authSubmitHandler}>\r\n          {!isLoginMode && (\r\n            <React.Fragment>\r\n              <Input\r\n                element='input'\r\n                id='name'\r\n                type='text'\r\n                label='Your Name'\r\n                validators={[VALIDATOR_REQUIRE()]}\r\n                errorText='Please enter a name'\r\n                onInput={InputHandler}\r\n              />\r\n              <ImageUpload\r\n                id='image'\r\n                center\r\n                onInput={InputHandler}\r\n                errorText='Please provide an image'\r\n              />\r\n            </React.Fragment>\r\n          )}\r\n          <Input\r\n            id='email'\r\n            element='input'\r\n            type='email'\r\n            label='E-mail'\r\n            placeholder='enter email'\r\n            validators={[VALIDATOR_EMAIL()]}\r\n            errorText='Please enter valid email'\r\n            onInput={InputHandler}\r\n          />\r\n          <Input\r\n            id='password'\r\n            element='input'\r\n            type='password'\r\n            label='Password'\r\n            placeholder='enter password'\r\n            validators={[VALIDATOR_MINLENGTH(6)]}\r\n            errorText='Please enter valid password'\r\n            onInput={InputHandler}\r\n          />\r\n          <Button type='submit' inverse disabled={!formState.isValid}>\r\n            {isLoginMode ? \"Login\" : \"SIGNUP\"}\r\n          </Button>\r\n        </form>\r\n        <Button type='submit' inverse onClick={switchModeHandler}>\r\n          {!isLoginMode ? \"Switch to Login\" : \"Switch to sign up\"}\r\n        </Button>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React, { Suspense } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\n\nimport \"./App.css\";\n// import Users from \"./users/pages/Users\";\n// import NewPlace from \"./places/pages/NewPlaces\";\n// import UserPlaces from \"./places/pages/UserPlaces\";\n// import UpdatePlace from \"./places/pages/UpdatePlace\";\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\nimport LoadingSpinner from \"./shared/components/UIElements/LoadingSpinner\";\nimport Auth from \"./users/pages/Auth\";\nimport { AuthContext } from \"./shared/context/auth-context\";\nimport { useAuth } from \"./shared/hooks/auth-hook\";\n\nconst Users = React.lazy(() => import(\"./users/pages/Users\"));\nconst NewPlace = React.lazy(\"./places/pages/NewPlaces\");\nconst UserPlaces = React.lazy(\"./places/pages/UserPlaces\");\nconst UpdatePlace = React.lazy(\"./places/pages/UpdatePlace\");\n\nconst App = () => {\n  const { token, userId, login, logout } = useAuth();\n  let routes;\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path='/' component={Users} exact />\n        <Route path='/places/new' component={NewPlace} exact />\n        <Route path='/places/:placeId' component={UpdatePlace} />\n        <Route path='/:userId/places' component={UserPlaces} exact />\n        {/* <Redirect to='/pagenotfound' component={() => \"page not found\"} /> */}\n        <Redirect to='/' component={Users} />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path='/' component={Users} exact />\n        <Route path='/:userId/places' component={UserPlaces} exact />\n        <Route path='/auth' component={Auth} exact />\n        <Redirect to='/auth' component={Auth} />\n      </Switch>\n    );\n  }\n  return (\n    <React.Fragment>\n      <AuthContext.Provider\n        value={{\n          isLoggedIn: !!token,\n          token: token,\n          userId: userId,\n          login: login,\n          logout: logout,\n        }}\n      >\n        <Router>\n          <MainNavigation />\n          <main>\n            <Suspense\n              fallback={\n                <div className='center'>\n                  <LoadingSpinner />\n                </div>\n              }\n            >\n              {routes}\n            </Suspense>\n          </main>\n        </Router>\n      </AuthContext.Provider>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}